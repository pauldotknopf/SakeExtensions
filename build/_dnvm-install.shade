use assembly="System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
use namespace="System"
use namespace="System.IO"
use namespace="System.IO.Compression"
use namespace="System.Net"

default binDir = '${Path.Combine(Directory.GetCurrentDirectory(), "bin")}'

default dnvmVer = '1.0.0-rc1'
default dnvmDir = '${Path.Combine(binDir, "dnvm")}'
default forceInstall = 'false'

var dnvmUrl = 'https://raw.githubusercontent.com/aspnet/dnvm/${dnvmVer}/src/'
var dnvmInstalled = '${ Directory.Exists(dnvmDir) }'
var doInstall = '${ bool.Parse(forceInstall) || !dnvmInstalled  }'

@{
    if (doInstall) 
    {
        Log.Info("Installing dnvm locally");

        if(Directory.Exists(dnvmDir))
            Directory.Delete(dnvmDir, true);

        Directory.CreateDirectory(dnvmDir);

         // Download node
        var wc = new WebClient();

        Log.Info(string.Format("Downloading {0} to {1}", dnvmUrl + "dnvm.cmd", Path.Combine(dnvmDir, "dnvm.cmd")));
        wc.DownloadFile(dnvmUrl + "dnvm.cmd", Path.Combine(dnvmDir, "dnvm.cmd"));

        Log.Info(string.Format("Downloading {0} to {1}", dnvmUrl + "dnvm.ps1", Path.Combine(dnvmDir, "dnvm.cmd")));
        wc.DownloadFile(dnvmUrl + "dnvm.ps1", Path.Combine(dnvmDir, "dnvm.ps1"));

        Log.Info(string.Format("Downloading {0} to {1}", dnvmUrl + "dnvm.sh", Path.Combine(dnvmDir, "dnvm.cmd")));
        wc.DownloadFile(dnvmUrl + "dnvm.sh", Path.Combine(dnvmDir, "dnvm.sh"));
    }
}